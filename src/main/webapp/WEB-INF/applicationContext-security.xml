<?xml version="1.0" encoding="UTF-8"?>
<b:beans xmlns="http://www.springframework.org/schema/security"
        xmlns:b="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
 
 	<b:import resource="infrastructure.xml" />

    <global-method-security pre-post-annotations="enabled" />

	<http pattern="/image/**" security="none"/>
    <http pattern="/static/**" security="none"/>
    <http pattern="/loggedout.jsp" security="none"/>
    <http pattern="/account/**" security="none"/>

    <http use-expressions="true">
        <intercept-url pattern="/member/**" access="hasRole('USER')" />
        <intercept-url pattern="/member/**" access="hasRole('MODERATOR')" />
        <!--
             Allow all other requests. In a real application you should
             adopt a whitelisting approach where access is not allowed by default
          -->
        <intercept-url pattern="/**" access="permitAll" />
         <form-login
            login-processing-url="/jojo" 
            login-page="/index.jsf"
            default-target-url="/secured/person/list.jsf"
            authentication-failure-url="/index.jsf" />
        <form-login />
        <logout logout-success-url="/index.jsf" delete-cookies="JSESSIONID" />
        <remember-me />
<!--
    Uncomment to enable X509 client authentication support
        <x509 />
-->
        <!-- Uncomment to limit the number of sessions a user can have -->
        <session-management invalid-session-url="/timeout.jsp">
            <concurrency-control max-sessions="1" error-if-maximum-exceeded="true" />
        </session-management>
    </http>

    <!--
    Usernames/Passwords are
        rod/koala
        dianne/emu
        scott/wombat
        peter/opal
    -->
    <b:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    
    <!-- <b:bean id="encoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder"/> -->

    <authentication-manager alias="authenticationManager">
        <authentication-provider>
        	<jdbc-user-service data-source-ref="dataSource"/>
        	<password-encoder hash="sha"/>
        </authentication-provider>
    </authentication-manager>
</b:beans>
